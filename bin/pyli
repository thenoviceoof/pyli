#!/usr/bin/python
################################################################################
#  Copyright (c) <2014> <thenoviceoof>
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

from __future__ import print_function
from future import standard_library
standard_library.install_aliases()
from builtins import str
import pyli
import sys

HELP_MSG = '''
pyli is a utility to make using python in conjunction with other CLI tools easier
 - auto-imports
 - populate variables (lines, line, contents) with stdin
 - print the last line automatically (if not None)
 - adds command line options as variables (other than those listed below)

Special switches include:
 --debug         Outputs debug information useful when developing pyli
 --help          Outputs this message
 --pprint        Uses pprint.pprint() instead of python's builtin print
 --version       Outputs the current version of pyli

Check out https://github.com/thenoviceoof/pyli for more details!
'''

if __name__ == '__main__':
    if len(sys.argv) == 1 or '--help' in sys.argv:
        print(HELP_MSG.format(sys.argv[0]))
    elif '--version' in sys.argv:
        version_string = '.'.join(str(v) for v in pyli.__version__)
        print(version_string)
    else:
        args = sys.argv[1:]
        debug = False
        pprint = False
        # strip out any switches
        if '--debug' in args:
            args.remove('--debug')
            debug = True
        if '--pprint' in args:
            args.remove('--pprint')
            pprint = True
        # pass everything else as a variable
        commands = []
        kwargs = {}
        while args:
            if args[0][0] == '-':
                if '=' in args[0]:
                    name, val = args[0].split('=', 1)
                    name = name.lstrip('-')
                    kwargs[name] = val
                    args = args[1:]
                elif len(args) > 1 and args[1][0] != '-':
                    name, val = args[:2]
                    name = name.lstrip('-')
                    kwargs[name] = val
                    args = args[2:]
                else:
                    # treat as a boolean switch
                    name = args[0].strip('-')
                    kwargs[name] = True
                    args = args[1:]
            else:
                commands.append(args[0])
                args = args[1:]

        program = '\n'.join(commands)
        pyli.main(program, debug=debug, pprint_opt=pprint, variables=kwargs)
